 if 'wikipedia' in self.query:
#                 speak('Searching Wikipedia...')
#                 self.query = self.query.replace("wikipedia", "")
#                 results = wikipedia.summary(self.query, sentences=2)
#                 speak("According to Wikipedia")
#                 speak(results)
#                 print(results)
# 
#             elif "you can sleep now " in self.query:
#                 speak("Okey Sir im going to sleep know sir , you can call me anytime ..")
#                 break
            elif 'whatsupp message 'in self.query:

                name=self.query

                if'anjali' in self.name:
                    nump="8882192614"
                    speak(f"What`s the message for {name}")
                    mess=self.takeCommand()
                    whatsupp.whatsapp(nump,mess)

                elif 'pinku' in self.name:
                    nump = "7302738750"
                    speak(f"What`s the message for {name}")
                    mess = self.takeCommand()
                    whatsupp. whatsupp_Grp(i)

                elif"now "in self.name:
                    grop="https://chat.whatsapp.com/0TM2fRh9WYO4f2RKXGqqOT"
                    speak(f"whats the message for group{name}")
                    mess=self.takeCommand()
                    whatsupp.whatsupp_Grp(grop,mess)

# 
#             elif"ip Address" in self.query:
#                 ip=get("https://api.ipify.org").text
#                 speak(f"Your Ip Address is {ip}")
# 
#             elif "open Notepad" in self.query:
#                 npath = "C:\\Windows\\system32\\notepad.exe"
#                 os.startfile(npath)
# 
#             elif 'open sublime text' in self.query:
#                 apath = "C:\\Program Files\\Sublime Text 3\\sublime_text.exe"
#                 os.startfile(apath)
# 
#             elif 'open command prompt' in self.query:
#                 os.system('start cmd')
# 
#             elif "Search on chrome" in self.query:
#                 speak("what should i search ,Sir")
#                 search = self.takeCommand()
#                 chrompath = "C:\\Users\\akash singh\\AppDataLocal\\Google\\Chrome\\Application\\chrome.exe %s"
#                 webbrowser.get(chrompath).open_new_tab(search + ".com")
#             # elif "temperature" in self.query:
#             #     search="temperature in Agra"
#             #     url =f"https://www.google.com/search?q(search)"
#             #     r=requests.get(url)
#             #     data=BeautifulSoup(r.text,"html.parser")
#             #     temp=data.find(("div",classs="BNeawe").text
#             #     speak(f"current(search) is (temp)")
# 
#             elif 'open stackoverflow' in self.query:
#                 speak("Here you go to Stack Over flow.Happy coding")
#                 webbrowser.open("stackoverflow.com")
# # working
#             elif 'play music' in self.query or "play song" in self.query:
#                 speak("Here you go with music")
#                 # music_dir = "G:\\Song"
#                 music_dir = "F:\mymovei"
#                 songs = os.listdir(music_dir)
#                 print(songs)
#                 random = os.startfile(os.path.join(music_dir, songs[1]))
#  # working
#             elif 'the time' in self.query:
#                 strTime=datetime.datetime.now().strftime("%H:%M,%S")
#                 print(strTime)
#                 speak(f"Sir ,the Time is {strTime}")
# 
#             elif 'open opera' in self.query:
#                 codePath = r"C:\\Users\\GAURAV\\AppData\\Local\\Programs\\Opera\\launcher.exe"
#                 os.startfile(codePath)
#             #
#             # elif 'email to gaurav' in self.query:
#             #     try:
#             #         speak("What should I say?")
#             #         content = self.takeCommand()
#             #         to = "Receiver email address"
#             #         sendEmail(to, content)
#             #         speak("Email has been sent !")
#             #     except Exception as e:
#             #         print(e)
#             #         speak("I am not able to send this email")
#  # working
#             elif 'send a mail' in self.query:
#                 try:
#                     speak("What should I say?")
#                     content = self.takeCommand()
# 
#                     to = "prathvi285285@gmail.com "
#                     sendEmail(to, content)
#                     speak("Email has been sent !")
#                 except Exception as e:
#                     print(e)
#                     speak("I am not able to send this email")
#  # working
#             elif 'how are you' in self.query:
#                 speak("I am fine, Thank you")
#                 speak("How are you, Sir")
# 
#             elif 'fine' in self.query or "good" in self.query:
#                 speak("It's good to know that your fine")
# 
#             elif "change my name to" in self.query:
#                 self.query = self.query.replace("change my name to", "")
#                 assname = self.query
# 
#             elif "my ip address" in self.query:
#                 ip=get('https://api.ipify.org').text
#                 speak(f"Your IP address is{ip}")
# 
#             elif "change name" in self.query:
#                 speak("What would you like to call me, Sir ")
#                 assname = self.takeCommand()
#                 speak("Thanks for naming me")
# 
#             elif "what's your name" in self.query or "What is your name" in self.query:
#                 speak("My friends call me  ,Jarvis bro")
# 
#                 print("My friends call me", assname)
# 
#             elif 'exit' in self.query:
#                 speak("Thanks for giving me your time")
#                 exit()
# 
#             elif "who made you" in self.query or "who created you" in self.query:
#                 speak("I have been created by Akash Singh.")
# 
#             elif 'joke' in self.query:
#                 speak(pyjokes.get_joke())
# 
#             elif "calculate" in self.query:
# 
#                 app_id = "Wolframalpha api id"
#                 client = wolframalpha.Client(app_id)
#                 indx = self.query.lower().split().index('calculate')
#                 self.query = self.query.split()[indx + 1:]
#                 res = client.self.query(' '.join(self.query))
#                 answer = next(res.results).text
#                 print("The answer is " + answer)
#                 speak("The answer is " + answer)
# 
#             elif 'search' in self.query or 'play' in self.query:
# 
#                 self.query = self.query.replace("search", "")
#                 self.query = self.query.replace("play", "")
#                 webbrowser.open(self.query)
# 
#             elif "who i am" in self.query:
#                 speak("If you talk then definately you r human.")
# 
#             elif "why you came to world" in self.query:
#                 speak("Thanks to Akash... further It's a secret")
# 
#             elif 'power point presentation' in self.query:
#                 speak("opening Power Point presentation")
#                 power = r"C:\\Users\\Akash\\Desktop\\Minor Project\\Presentation\\Voice Assistant.pptx"
#                 os.startfile(power)
# 
#             elif 'is love' in self.query:
#                 speak("It is 7th sense that destroy all other senses")
# 
#             elif "who are you" in self.query:
#                 speak("I am your virtual assistant created by  Akash Singh")
# 
#             elif 'reason for you' in self.query:
#                 speak("I was created as a Minor project by Mister Akash Singh ")
# 
#             elif 'change background' in self.query:
#                 ctypes.windll.user32.SystemParametersInfoW(20,
#                                                            0,
#                                                            "Location of wallpaper",
#                                                            0)
#                 speak("Background changed succesfully")
# 
#             elif 'open bluestack' in self.query:
#                 appli = r"C:\\ProgramData\\BlueStacks\\Client\\Bluestacks.exe"
#                 os.startfile(appli)
# 
#             elif 'news' in self.query:
# 
#                 try:
#                     jsonObj = urlopen(
#                         '''https://newsapi.org/v1/articles?source = the-times-of-india&sortBy = top&apiKey =\\times of India Api key\\''')
#                     data = json.load(jsonObj)
#                     i = 1
# 
#                     speak('here are some top news from the times of india')
#                     print('''=============== TIMES OF INDIA ============''' + '\n')
# 
#                     for item in data['articles']:
#                         print(str(i) + '. ' + item['title'] + '\n')
#                         print(item['description'] + '\n')
#                         speak(str(i) + '. ' + item['title'] + '\n')
#                         i += 1
#                 except Exception as e:
# 
#                     print(str(e))
# 
#             elif"Send Message" in self.query:
#                 kit.sendwhatsupp("+918882192614","hello",2,24)
# 
#             # elif 'lock window' in self.query:
#             #     speak("locking the device")
#             #     ctypes.windll.user32.LockWorkStation()
# 
#             elif 'shutdown system' in self.query:
#                 speak("Hold On a Sec ! Your system is on its way to shut down")
#                 subprocess.call('shutdown / p /f')
#             #
#             # elif 'empty recycle bin' in self.query:
#             #     winshell.recycle_bin().empty(confirm=False, show_progress=False, sound=True)
#             #     speak("Recycle Bin Recycled")
# 
#             elif "don't listen" in self.query or "stop listening" in self.query:
#                 speak("for how much time you want to stop jarvis from listening commands")
#                 a = int(self.takeCommand())
#                 time.sleep(a)
#                 print(a)
# 
#             elif "where is" in self.query:
#                 self.query = self.query.replace("where is", "")
#                 location = self.query
#                 speak("User asked to Locate")
#                 speak(location)
#                 webbrowser.open("https://www.google.nl / maps / place/" + location + "")
# 
#             elif "camera" in self.query or "take a photo" in self.query:
#                 ec.capture(0, "Jarvis Camera ", "img.jpg")
# 
#             elif "restart" in self.query:
#                 subprocess.call(["shutdown", "/r"])
# 
#             elif "hibernate" in self.query or "sleep" in self.query:
#                 speak("Hibernating")
#                 subprocess.call("shutdown / h")
# 
#             elif "log off" in self.query or "sign out" in self.query:
#                 speak("Make sure all the application are closed before sign-out")
#                 time.sleep(5)
#                 subprocess.call(["shutdown", "/l"])
# 
#             elif "write a note" in self.query:
#                 speak("What should i write, sir")
#                 note = self.takeCommand()
#                 file = open('jarvis.txt', 'w')
#                 # speak("Sir, Should i include date and time")
#                 # snfm = self.takeCommand()
#                 # if 'yes' in snfm or 'sure' in snfm:
#                 #     strTime = datetime.datetime.now().strftime("% H:% M:% S")
#                 #     file.write(strTime)
#                 #     file.write(" :- ")
#                 #     file.write(note)
#                 # else:
#                 #     file.write(note)
# 
#             elif "show note" in self.query:
#                 speak("Showing Notes")
#                 file = open("jarvis.txt", "r")
#                 print(file.read())
#                 speak(file.read(6))
#             # how to do mode
#             elif "activate how to do mod" in self.query:
#                 from pywikihow import search_wikihow
#                 speak("How to do mode is ,Activated now  ")
#                 while True:
#                     speak("Please tell me sir , What you you want to know ")
#                     how = self.takeCommand()
#                     try:
#                         if "exit" in how or "close " in how:
#                             speak("Okey sir , how to do  mode is closed now")
#                             break
#                         else:
#                             max_result = 1
#                             how_to = search_wikiHow(how, max_result)
#                             assert len(how_to) == 1
#                             how_to[0].print()
#                             speak(how_to[0].summary)
#                     except Exception as e:
#                         speak("sorry sir , I am not able to find this")
# 
#             elif "update assistant" in self.query:
#                 speak("After downloading file please replace this file with the downloaded one")
#                 url = '# url after uploading file'
#                 r = requests.get(url, stream=True)
# 
#                 with open("Voice.py", "wb") as Pypdf:
# 
#                     total_length = int(r.headers.get('content-length'))
# 
#                     for ch in progress.bar(r.iter_content(chunk_size=2391975),
#                                            expected_size=(total_length / 1024) + 1):
#                         if ch:
#                             Pypdf.write(ch)
# 
#             # NPPR9-FWDCX-D2C8J-H872K-2YT43
#             elif "jarvis" in self.query:
# 
#                 wishMe()
#                 speak("Jarvis 1 point o in your service Mister")
#                 speak(assname)
# 
#             elif "weather" in self.query:
# 
#                 # Google Open weather website
#                 # to get API of Open weather
#                 api_key = "Api key"
#                 base_url = "http://api.openweathermap.org / data / 2.5 / weather?"
#                 speak(" City name ")
#                 print("City name : ")
#                 city_name = self.takeCommand()
#                 complete_url = base_url + "appid =" + api_key + "&q =" + city_name
#                 response = requests.get(complete_url)
#                 x = response.json()
# 
#                 if x["cod"] != "404":
#                     y = x["main"]
#                     current_temperature = y["temp"]
#                     current_pressure = y["pressure"]
#                     current_humidiy = y["humidity"]
#                     z = x["weather"]
#                     weather_description = z[0]["description"]
#                     print(" Temperature (in kelvin unit) = " + str(
#                         current_temperature) + "\n atmospheric pressure (in hPa unit) =" + str(
#                         current_pressure) + "\n humidity (in percentage) = " + str(
#                         current_humidiy) + "\n description = " + str(weather_description))
# 
#                 else:
#                     speak(" City Not Found ")
# 
#             elif "send message " in self.query:
#                 # You need to create an account on Twilio to use this service
#                 account_sid = 'Account Sid key'
#                 auth_token = 'Auth token'
#                 client = Client(account_sid, auth_token)
# 
#                 message = client.messages \
#                     .create(
#                     body=self.takeCommand(),
#                     from_='9045633959',
#                     to='6396881542'
#                 )
# 
#                 print(message.sid)
# 
#             elif "wikipedia" in self.query:
#                 speak("Searching Wikipedia....")
#                 self.query=self.query.replace("wikipedia","")
#                 results=wikipedia.summary(self.query,sentences=2)
#                 speak("According to wikipedia")
#                 print(results)
#                 speak(results)
# 
#             elif"open youtube" in self.query:
#                 webbrowser.open("youtube.com")
# 
#             elif "open facebook" in self.query:
#                 webbrowser.open("facebook.com")
# 
#             elif"open stackoverflow" in self.query:
#                 webbrowser.open("stackoverflow.com")
# 
#             # elif "play music " in self.query:
#             #     music_dir='F:\\mymovei\\'
# 
#             elif "Good Morning" in self.query:
#                 speak("A warm" + self.query)
#                 speak("How are you Mister")
#                 speak(assname)
# 
#             # most asked question from google Assistant
#             elif "will you be my gf" in self.query or "will you be my bf" in self.query:
#                 speak("I'm not sure about, may be you should give me some time")
# 
#             elif "how are you" in self.query:
#                 speak("I'm fine, glad you me that and what about you Sir")
# 
#             elif "i love you" in self.query:
#                 speak("It's hard to understand")
# 
#             elif "what is" in self.query or "who is" in self.query:
# 
#                 # Use the same API key
#                 # that we have generated earlier
#                 client = wolframalpha.Client("API_ID")
#                 res = client.self.query(self.query)
# 
#                 try:
#                     print(next(res.results).text)
#                     speak(next(res.results).text)
#                 except StopIteration:
#                     print("No results")
#             elif "no thanks" in self.query:
#                 speak("thank for using me sir , have a good day .")
#                 sys.exit()
#             speak("Sir do you have any other work for me ")